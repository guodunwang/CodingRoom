# 第一篇  基 本 框 架
## 第1章 Linux内核概述
### 1.1   UNIX与Linux
#### 1.1.1   UNIX
#### 1.1.2   Linux
#### 1.1.3   宏内核与微内核
#### 1.1.4   Linux内核源码及版本
### 1.2   Linux内核模型
#### 1.2.1   多视角下的内核
#### 1.2.2   功能模型
#### 1.2.3   内存模型
#### 1.2.4   时空模型
#### 1.2.5   特权模型
### 1.3   本书局限性
### 小结 18
## 第2章 进程影像
### 2.1   从源代码到进程
#### 2.1.1   源代码、目标文件
#### 2.1.2   可执行文件与进程影像
### 2.2   proc中的进程
#### 2.2.1   进程内存空间
#### 2.2.2   进程运行状态等信息
### 2.3   进程空间
#### 2.3.1   进程空间描述符
#### 2.3.2   虚存区域VMA
#### 2.3.3   VMA属性
### 2.4   ELF可执行文件装入过程
#### 2.4.1   ELF装入函数
#### 2.4.2   ELF格式
### 2.5   进程空间的动态变化
#### 2.5.1   VMA上的操作
#### 2.5.2   文件映射
#### 2.5.3   堆的调整
#### 2.5.4   栈的变化
### 2.6   并发的进程空间
### 小结 61
## 第3章 虚拟空间的物理支撑
### 3.1   物理内存组织与管理
#### 3.1.1   节点与内存域
#### 3.1.2   物理页帧
#### 3.1.3   buddy系统
#### 3.1.4   页帧迁移
#### 3.1.5   内存热插拔
### 3.2   地址映射与页表
#### 3.2.1   分页机制与页表
#### 3.2.2   缺页异常
### 3.3   内核空间
#### 3.3.1   一致映射与高端内存
#### 3.3.2   一致内存分配
#### 3.3.3   非一致内存分配
#### 3.3.4   slub分配器
### 小结 130
## 第4章 进程组织与基础行为
### 4.1   进程组织管理
#### 4.1.1   PCB进程控制块
#### 4.1.2   命名空间
#### 4.1.3   进程标识
#### 4.1.4   进程间关系
#### 4.1.5   进程资源限制
### 4.2   进程创建与撤销
#### 4.2.1   进程创建
#### 4.2.2   execve系统调用
#### 4.2.3   内核线程
#### 4.2.4   Linux进程树
#### 4.2.5   进程的撤销
### 4.3   进程切换
#### 4.3.1   切换时机
#### 4.3.2   切换过程
#### 4.3.3   切换示例
### 小结 181
## 第5章 进程调度与负载均衡
### 5.1   调度与均衡基本框架
### 5.2   进程状态与转换
#### 5.2.1   进程调度状态
#### 5.2.2   进程状态变迁
### 5.3   进程调度
#### 5.3.1   调度框架
#### 5.3.2   完全公平调度
#### 5.3.3   实时调度
#### 5.3.4   STOP和IDLE调度类
#### 5.3.5   调度控制与proc接口
### 5.4   负载均衡
#### 5.4.1   处理器层次结构
#### 5.4.2   调度的层次管理
#### 5.4.3   CFS任务的负载均衡
#### 5.4.4   实时负载均衡
### 小结 258
## 第6章 进程间通信与同步
### 6.1   管道通信
#### 6.1.1   无名管道
#### 6.1.2   命名管道
#### 6.1.3   管道数据结构
#### 6.1.4   管道操作
### 6.2   System V IPC
#### 6.2.1   IPC标识与命名空间
#### 6.2.2   IPC公共框架
#### 6.2.3   IPC信号量
#### 6.2.4   IPC消息队列
#### 6.2.5   IPC共享内存
### 6.3   信号
#### 6.3.1   信号分类
#### 6.3.2   数据结构
#### 6.3.3   信号产生与发送
#### 6.3.4   信号的递交和处理
### 小结 312
## 第7章 内核活动
### 7.1   中断分类
#### 7.1.1   x86的中断和异常
#### 7.1.2   后半部机制与软中断
#### 7.1.3   中断相关概念的关系
### 7.2   中断处理
#### 7.2.1   中断号
#### 7.2.2   中断描述符表
#### 7.2.3   公共入口
#### 7.2.4   异常处理
### 7.3   高层中断处理
#### 7.3.1   转向高层处理
#### 7.3.2   中断的高层数据结构
#### 7.3.3   中断返回处理
#### 7.3.4   中断的线程化
### 7.4   中断嵌套与中断管理
#### 7.4.1   中断嵌套与中断上下文
#### 7.4.2   中断管理
### 7.5   软中断和tasklet
#### 7.5.1   中断的下半部
#### 7.5.2   软中断执行时机
#### 7.5.3   相关数据结构
#### 7.5.4   软中断的执行
#### 7.5.5   软中断的相关操作
#### 7.5.6   tasklet
### 7.6   工作队列
#### 7.6.1   工作队列机制
#### 7.6.2   cmwq数据结构
#### 7.6.3   工作项
#### 7.6.4   cmwq工作队列
#### 7.6.5   工作者池worker_pool
#### 7.6.6   并发度、应急处理等
### 7.7   系统调用
#### 7.7.1   POSIX API、C库和系统调用
#### 7.7.2   系统调用的实现
### 小结 399
## 第8章 时间管理
### 8.1   时间管理框架
#### 8.1.1   基本概念
#### 8.1.2   时间中断和事件
#### 8.1.3   clock_event_device与tick_device
#### 8.1.4   TIMER_SOFTIRQ软中断
#### 8.1.5   timekeeper
### 8.2   定时器
#### 8.2.1   低分辨率定时器
#### 8.2.2   高精度定时器
#### 8.2.3   模拟tick事件
#### 8.2.4   通知链技术
### 小结 424
## 第9章 内核并发与同步
### 9.1   同步的需求
#### 9.1.1   内核并发情形
#### 9.1.2   内核抢占
### 9.2   内核共享变量的保护
#### 9.2.1   被保护对象
#### 9.2.2   保护原则
#### 9.2.3   禁止内核并发
### 9.3   内核同步手段
#### 9.3.1   原子操作
#### 9.3.2   自旋锁、读写锁和顺序锁
#### 9.3.3   RCU机制
#### 9.3.4   顺序和屏障
#### 9.3.5   信号量与互斥量
#### 9.3.6   等待队列与完成变量
#### 9.3.7   每CPU变量
### 小结 458
# 第二篇  盘根错节的文件系统
## 第10章 文件系统
### 10.1   文件系统的抽象层次
#### 10.1.1   进程视角下的文件
#### 10.1.2   VFS虚拟文件系统
#### 10.1.3   多角度分层模型
### 10.2   VFS核心对象
#### 10.2.1   文件对象
#### 10.2.2   目录项对象
#### 10.2.3   索引节点对象
#### 10.2.4   超级块对象
### 10.3   文件系统类型与挂载
#### 10.3.1   文件系统类型与注册
#### 10.3.2   挂载操作
#### 10.3.3   挂载模式
#### 10.3.4   特殊文件系统
### 小结 525
## 第11章 页缓存和块缓存
### 11.1   页高速缓存
#### 11.1.1   address_space
#### 11.1.2   页高速缓存的组织
#### 11.1.3   反向映射
### 11.2   块高速缓存
#### 11.2.1   块缓存
#### 11.2.2   LRU块缓存
#### 11.2.3   块缓存操作
### 小结 547
## 第12章 VFS的文件操作
### 12.1   VFS系统调用
### 12.2   open()与close()系统调用
#### 12.2.1   open的框架
#### 12.2.2   文件定位过程
#### 12.2.3   close()系统调用
### 12.3   读/写系统调用
#### 12.3.1   入口代码
#### 12.3.2   通用write写例程
#### 12.3.3   通用read读例程
#### 12.3.4   其他读写细节
#### 12.3.5   向BIO层提交请求
### 小结 588
## 第13章 ext2文件系统
### 13.1   ext2磁盘数据结构
#### 13.1.1   磁盘分区的组织
#### 13.1.2   块组描述符和位图
#### 13.1.3   盘上和内存数据结构
### 13.2   ext2超级块
#### 13.2.1   ext2超级块数据结构
#### 13.2.2   挂载与访问
### 13.3   ext2索引节点
#### 13.3.1   盘上ext2索引节点
#### 13.3.2   内存ext2索引节点
#### 13.3.3   inode_operations
#### 13.3.4   ext2地址空间与文件操作
### 13.4   目录及目录项
#### 13.4.1   ext2_dir_entry
#### 13.4.2   ext2_lookup()
### 小结 610
## 第14章 页缓存同步（回写）
### 14.1   同步/回写、交换与回收
### 14.2   脏页同步（回写）
#### 14.2.1   回写机制演变
#### 14.2.2   同步时机与框架
#### 14.2.3   基本数据结构
### 14.3   回写接口
#### 14.3.1   sync系列系统调用
#### 14.3.2   sys_sync()
#### 14.3.3   sys_syncfs
#### 14.3.4   单个文件的同步
#### 14.3.5   被动回写
### 14.4   回写工作队列
#### 14.4.1   初始化
#### 14.4.2   工作队列处理函数
### 14.5   回写操作
#### 14.5.1   do_writepages()
#### 14.5.2   ext2_writepages()
#### 14.5.3   回写等待
### 小结 649
## 第15章 内存回收与交换
### 15.1   页帧回收
#### 15.1.1   直接释放
#### 15.1.2   LRU页帧组织
#### 15.1.3   PFRA回收算法
### 15.2   核心回收操作
#### 15.2.1   shrink_zone()
#### 15.2.2   shrink_slab()
#### 15.2.3   解除页表映射
### 15.3   交换
#### 15.3.1   交换功能
#### 15.3.2   交换分区
#### 15.3.3   交换缓存
### 小结 675
## 第16章 设备管理
### 16.1   设备管理组织
#### 16.1.1   设备驱动模型
#### 16.1.2   sysfs
#### 16.1.3   基础组件
#### 16.1.4   容器
### 16.2   设备的VFS接口
#### 16.2.1   设备文件
#### 16.2.2   从VFS中访问设备
### 16.3   字符设备
#### 16.3.1   设备的散列组织
#### 16.3.2   初始化与注册
#### 16.3.3   打开字符设备
### 16.4   PCI设备
#### 16.4.1   pci_bus_type和pci_bus
#### 16.4.2   pci_driver
#### 16.4.3   pci_dev
#### 16.4.4   uevent
### 小结 705
## 第17章 块设备
### 17.1   基本概念
#### 17.1.1   块设备层
#### 17.1.2   传送单位
### 17.2   块设备层组件
#### 17.2.1   磁盘与磁盘分区
#### 17.2.2   块设备
#### 17.2.3   请求队列
### 17.3   提交请求及处理
#### 17.3.1   plug/unplug机制
#### 17.3.2   提交请求
#### 17.3.3   提交到驱动程序
#### 17.3.4   硬盘的request_fn
#### 17.3.5   中断处理
### 17.4   IO调度
#### 17.4.1   IO调度器
#### 17.4.2   调度器数据结构
### 17.5   初始化及注册
#### 17.5.1   块设备初始化
#### 17.5.2   硬盘初始化
### 小结 764
### 附录 765
### 后记 774