##  开篇词 从0开始搭建一个企业级Go应用
##  IAM系统概述：我们要实现什么样的Go项目？
##  环境准备：如何安装和配置一个基本的Go开发环境？
##  项目部署：如何快速部署IAM系统？
##  规范设计（上）：项目开发杂乱无章，如何规范？
##  规范设计（下）：commit信息风格迥异、难以阅读，如何规范？
##  目录结构设计：如何组织一个可维护、可扩展的代码目录？
##  工作流设计：如何设计合理的多人开发模式？
##  研发流程设计（上）：如何设计Go项目的开发流程？
##  研发流程设计（下）：如何管理应用的生命周期？
##  设计方法：怎么写出优雅的Go项目？
##  设计模式：Go常用设计模式概述
##  API风格（上）：如何设计RESTfulAPI？
##  API风格（下）：RPCAPI介绍
##  项目管理：如何编写高质量的Makefile？
##  研发流程实战：IAM项目是如何进行研发流程管理的？
##  代码检查：如何进行静态代码检查？
##  API文档：如何生成SwaggerAPI文档？
##  错误处理（上）：如何设计一套科学的错误码？
##  错误处理（下）：如何设计错误包？
##  日志处理（上）：如何设计日志包并记录日志？
##  日志处理（下）：手把手教你从0编写一个日志包
##  应用构建三剑客：Pflag、Viper、Cobra核心功能介绍
##  应用构建实战：如何构建一个优秀的企业应用框架？
##  Web服务：Web服务核心功能有哪些，如何实现？
##  认证机制：应用程序如何进行访问认证？
##  IAM项目是如何设计和实现访问认证功能的？
##  权限模型：5大权限模型是如何进行资源授权的？
##  控制流（上）：通过iam-apiserver设计，看Web服务的构建
##  控制流（下）：iam-apiserver服务核心功能实现讲解
##  ORM：CURD神器GORM包介绍及实战
##  数据流：通过iam-authz-server设计，看数据流服务的设计
##  数据处理：如何高效处理应用程序产生的数据？
##  SDK设计（上）：如何设计出一个优秀的GoSDK？
##  SDK设计（下）：IAM项目GoSDK设计和实现
##  效率神器：如何设计和实现一个命令行客户端工具？
##  代码测试（上）：如何编写Go语言单元测试和性能测试用例？
##  代码测试（下）：Go语言其他测试类型及IAM测试介绍
##  性能分析（上）：如何分析Go语言代码的性能？
##  性能分析（下）：APIServer性能测试和调优实战
##  软件部署实战（上）：部署方案及负载均衡、高可用组件介绍
##  软件部署实战（中）：IAM系统生产环境部署实战
##  软件部署实战（下）：IAM系统安全加固、水平扩缩容实战
##  技术演进（上）：虚拟化技术演进之路
##  技术演进（下）：软件架构和应用生命周期技术演进之路
##  基于Kubernetes的云原生架构设计
##  如何制作Docker镜像？
##  如何编写Kubernetes资源定义文件？
##  IAM容器化部署实战
##  服务编排（上）：Helm服务编排基础知识
##  服务编排（下）：基于Helm的服务编排部署实战
##  基于GitHubActions的CI实战
##  结束语-如何让自己的Go研发之路走得更远？
### 特别放送-GoModules实战 	1108
### 特别放送-GoModules依赖包管理全讲 	1123
### 特别放送-IAM排障指南 	1146
### 特别放送-分布式作业系统设计和实现 	1166
### 特别放送-给你一份Go项目中最常用的Makefile核心语法 	1186
### 特别放送-给你一份清晰、可直接套用的Go编码规范 	1209
### 直播加餐如何从小白进阶成Go语言专家？ 	1240
### 期末考试《Go语言项目开发实战》满分试卷，等你来挑战！ 	1242